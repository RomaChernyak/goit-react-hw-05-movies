{"version":3,"file":"static/js/335.62cdcece.chunk.js","mappings":"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","sources":["api/featchApi.js","components/ReviewList/ReviewList.styled.js","components/ReviewList/ReviewList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = 'api_key=7d0a5671b3bac0f4af8c650bfdc346ed';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/trending/movie/day?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(query) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const RevList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* margin-top: 20px; */\n`;\n\nexport const RevItem = styled.li`\n  box-shadow: 0 0 5px 3px rgb(11 127 171 / 50%);\n  padding: 15px;\n  margin: 0;\n  /* &:not(:last-child) {\n    margin-bottom: 20px;\n  } */\n`;\n\nexport const RevName = styled.p`\n  color: lightgrey;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 15px;\n`;\n\nexport const RevText = styled.p`\n  color: lightgrey;\n  font-weight: 400;\n  font-size: 14px;\n  margin: 0;\n  margin-top: 10px;\n\n  line-height: 1.3;\n`;\n","import PropTypes from 'prop-types';\nimport { RevList, RevItem, RevName, RevText } from \"./ReviewList.styled\";\n\nconst ReviewList = ({ reviews, isError }) => {\n\n  return (\n    <section>\n      { isError &&  isError }\n      <RevList>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <RevItem key={id}>\n              <RevName>{author}</RevName>\n              <RevText>{content}</RevText>\n            </RevItem>\n          );\n        })}\n      </RevList>\n    </section>\n  );\n};\n\nexport default ReviewList;\n\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  isError: PropTypes.string.isRequired\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RotatingLines } from 'react-loader-spinner';\n\nimport ReviewList from 'components/ReviewList/ReviewList';\n\nimport { getMovieReviews } from 'api/featchApi';\n\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [isError, setIsError] = useState('')\n\n  const { movieId } = useParams();\n\n  useEffect(()=> {\n    const fetch = async() => {\n      setLoad(true);\n\n      try {\n        const dataMovie = await getMovieReviews(movieId);\n\n        const reviews = dataMovie.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n\n        if (reviews.length === 0) {\n          setIsError(`No reviews`)\n        }\n        \n        setReviews(reviews);\n      }\n      catch (error) {\n        setIsError(error.message)\n      }\n      finally {\n        setLoad(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n    {load && (\n        <RotatingLines\n          strokeColor=\"rgb(11, 127, 171)\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {reviews.length !== 0\n        ? < ReviewList reviews={reviews} isError={isError} />\n        : <div style={{\n            color: \"lightgrey\",\n            fontWeight: \"400\",\n            fontSize: \"14px\",\n            paddingLeft: \"40px\",\n            paddingTop:\"20px\"\n        }}>{ isError }</div>\n        }\n    </>\n  ) \n};\n\nexport default Reviews;"],"names":["API_KEY","BASE_URL","getTrendingMovies","response","axios","data","Notiflix","console","log","getMovieInfo","id","getMovieReviews","getMovieCast","getSearchMovies","query","RevList","styled","RevItem","RevName","RevText","reviews","isError","map","author","content","useState","setReviews","load","setLoad","setIsError","movieId","useParams","useEffect","fetch","dataMovie","results","length","message","strokeColor","strokeWidth","animationDuration","width","visible","style","color","fontWeight","fontSize","paddingLeft","paddingTop"],"sourceRoot":""}