{"version":3,"file":"static/js/415.a88b1d57.chunk.js","mappings":"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","sources":["api/featchApi.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = 'api_key=7d0a5671b3bac0f4af8c650bfdc346ed';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/trending/movie/day?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(query) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Text = styled.h1`\n  margin: 0;\n  color: lightgrey;\n  padding-left: 12px;\n  font-weight: 700;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 20px;\n  padding-left: 12px;\n`;\n\nexport const Item = styled.li`\n  color: lightgrey;\n  /* \n  &:not(:last-child) {\n    margin-bottom: 5px;\n  } */\n`;\n\nexport const FilmLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    color: gray;\n    font-weight: 500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { List, Item, FilmLink } from './MovieList.styled';\n\n \nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n\n    <section style={{ paddingBottom: \"40px\" }}>\n      \n      {movies.length > 0 && (\n       <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n           <FilmLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.original_title ?? movie.name}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n      )}\n    </section>\n \n  )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};","import { useState, useEffect } from \"react\";\n\nimport { getTrendingMovies } from \"api/featchApi\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\n\nimport MovieList from \"components/MovieList/MovieList\";\n\n\nconst Home = () => {\n\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoad(true);\n      try {\n        const dataMovies = await getTrendingMovies();\n\n        const movies = dataMovies.results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n\n        setMoviesSearch(movies);\n      } catch (error) {\n        setIsError('Oops...Somesing went wrong');\n      } finally {\n        setLoad(false);\n      }\n    };\n    \n    fetch();\n  }, []);\n \n  \n  return (\n    <>\n\n      <h1>Trending today</h1>\n\n      {isError\n        ? {isError}\n        : <MovieList movies={moviesSearch} />\n      }\n\n      {' '}\n      \n      {load && (\n        <RotatingLines\n          strokeColor=\"rgb(11, 127, 171)\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Home;"],"names":["API_KEY","BASE_URL","getTrendingMovies","response","axios","data","Notiflix","console","log","getMovieInfo","id","getMovieReviews","getMovieCast","getSearchMovies","query","List","styled","Item","FilmLink","Link","movies","location","useLocation","style","paddingBottom","length","map","movie","to","state","from","original_title","name","useState","moviesSearch","setMoviesSearch","load","setLoad","isError","setIsError","useEffect","fetch","dataMovies","results","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}