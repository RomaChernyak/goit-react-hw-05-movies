{"version":3,"file":"static/js/528.442f3b07.chunk.js","mappings":"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","sources":["api/featchApi.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = 'api_key=7d0a5671b3bac0f4af8c650bfdc346ed';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/trending/movie/day?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(query) {\n  let response = '';\n  \n  try {\n    response = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\"Oops... I did it again.\");\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Text = styled.h1`\n  margin: 0;\n  color: lightgrey;\n  padding-left: 12px;\n  font-weight: 700;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 20px;\n  padding-left: 12px;\n`;\n\nexport const Item = styled.li`\n  color: lightgrey;\n  /* \n  &:not(:last-child) {\n    margin-bottom: 5px;\n  } */\n`;\n\nexport const FilmLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    color: gray;\n    font-weight: 500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { List, Item, FilmLink } from './MovieList.styled';\n\n \nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n\n    <section style={{ paddingBottom: \"40px\" }}>\n      \n      {movies.length > 0 && (\n       <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n           <FilmLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.original_title ?? movie.name}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n      )}\n    </section>\n \n  )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n  margin-top: 25px;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 1.15;\n  margin: 0;\n\n  line-height: 1.3;\n  color: lightgray;\n  /* background-color: rgb(10 130 170 / 30%); */\n  background-color: gray;\n  width: 300px;\n  height: 30px;\n  margin-right: 10px;\n\n  border-radius: 4px;\n  padding: 4px;\n  /* border-color: lightgray; */\n  border-color: gray;\n  outline: 1px solid lightgray;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  background-color: #444;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  color: gray;\n  font-weight: 500;\n  box-shadow: 0 0 5px 3px rgba(11, 127, 171, 0.7);\n  cursor: pointer;\n\n  &:hover {\n    color: lightgray;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Form, Input, Button } from './SearchBar.styled'; \n\nconst SearchBar = ({ handleSubmit, value, setInputValue }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input \n        type = \"text\"\n        name = \"query\"\n        autoComplete = \"off\"\n        placeholder = \"Search movie\"\n        value = {value}\n        onChange = {event => setInputValue(event.target.value)}        \n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n\n\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  setInputValue: PropTypes.func.isRequired,\n};\n\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport  SearchBar  from \"components/SearchBar/SearchBar\";\nimport  MovieList  from \"components/MovieList/MovieList\";\nimport { getSearchMovies } from \"api/featchApi\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [load, setLoad] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetch = async () => {\n      setIsError(\"\")\n      if (query === '') {\n        return;\n      }\n      setLoad(true);\n      try {\n        const dataMovies = await getSearchMovies(query);\n\n        const movies = dataMovies.results;\n\n        if (movies.length === 0) {\n          setIsError(`Sorry, the movies you requested: \"${query}\" not found.`)\n        }\n\n        setMoviesSearch(movies);\n        setInputValue('');\n      } catch (error) {\n        setIsError('Oops...Somesing went wrong');\n      } finally {\n        setLoad(false);\n      }\n    };\n\n    fetch();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      setIsError('Fill in the search field');\n      return;\n    }\n\n    const normalizedValue = event.target.elements.query.value.toLowerCase();\n\n    const nextSearchParams = inputValue !== ''\n      ? { query: normalizedValue }\n      : {};\n    \n    setSearchParams(nextSearchParams);\n\n  };\n\n  return (\n    <>\n      <section>\n        <div>\n          <SearchBar\n            handleSubmit={handleSubmit}\n            value={inputValue}\n            setInputValue={setInputValue}\n          />\n          \n          { isError === \"\"\n            ? <MovieList movies={moviesSearch} />\n            : <div style={{\n            color: \"lightgrey\",\n            fontWeight: \"400\",\n            fontSize: \"18px\",\n            paddingLeft: \"24px\",\n            paddingTop:\"20px\"\n        }}>{isError}</div>}\n        </div>\n        {load && (\n          <RotatingLines\n            strokeColor=\"rgb(11, 127, 171)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        )}\n      </section>\n    </>\n  )\n}\n\n\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","getTrendingMovies","response","axios","data","Notiflix","console","log","getMovieInfo","id","getMovieReviews","getMovieCast","getSearchMovies","query","List","styled","Item","FilmLink","Link","movies","location","useLocation","style","paddingBottom","length","map","movie","to","state","from","original_title","name","Form","Input","Button","handleSubmit","value","setInputValue","onSubmit","type","autoComplete","placeholder","onChange","event","target","useSearchParams","searchParams","setSearchParams","useState","moviesSearch","setMoviesSearch","inputValue","load","setLoad","isError","setIsError","get","useEffect","fetch","dataMovies","results","preventDefault","trim","normalizedValue","elements","toLowerCase","MovieList","color","fontWeight","fontSize","paddingLeft","paddingTop","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}